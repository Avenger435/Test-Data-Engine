# Run nginx as non-root user
# user nginx;  # Remove this - nginx:alpine runs as nginx user by default
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /run/nginx/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_proxy"';

    # Reduce access log noise in production; keep it off for static endpoints
    access_log off;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    server {
        listen 80;
        server_name localhost;

        # Root directory for static files
        root /usr/share/nginx/html;
        index index.html;

        # Handle static assets with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Handle all routes (SPA fallback to index.html)
        location / {
            try_files $uri $uri/ /index.html;

            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Security audit UI and data
        location = /security {
            # serve the HTML UI
            try_files /security.html =404;
        }

        location = /security-audit.json {
            # serve the pre-captured npm audit JSON
            default_type application/json;
            try_files $uri =404;
        }

        location = /os-packages.txt {
            default_type text/plain;
            try_files $uri =404;
        }

        # Image scan report (Trivy JSON) - published by CI/script into the container
        location = /image-scan.json {
            default_type application/json;
            try_files $uri =404;
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
